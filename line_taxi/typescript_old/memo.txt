入力レコードから金額を計算できる
・距離レコードから金額を計算できる
　　・初乗り運賃
　　・10kmまで400mごと
　　・10km以降350mごと
　　・以上の距離区間をまたいで計算ができる
・低速走行時間から金額を計算できる
　　・45秒ごと
・時間帯による加算料金を計算できる
　　・深夜割増
　　・ピークタイム
・不正な入力はエラーが出せる
　　・距離が0.0形式でない
　　・距離が99.9より大きい
　　・初乗レコードが存在しない
　　・初乗レコードと降車時の2行以上が存在しない
　　・初乗から降車までの距離は0.1以上である
　　・時間軸に沿っていない
　　・HH:mm:ss.fffでない
    ・レコードの間隔が45秒未満でない
　　・空行が存在する

入力の型
[0-9][0-9]:[0-9][0-9]:[0-9][0-9].[0-9][0-9][0-9] [0-9][0-9].[0-9]
出力の型
number

◯main
answer(input)

◯answer
inputから1行ずつ取り出す
validate(line)
record = convertRecord(line) // ここで24時間以上の時間を24時間未満に変更。Temporalが24以上数字を受け付けないため。レコードの順番はvalidateで保証。
update(record)

◯update
distanceMeterUpdate(record.distance)
lowSpeedTimeMeterUpdate(record)
feeMeterUpdate()

◯feeMeterUpdate
fee = distanceFee() * overTimeRate(record.time) + lowSppedTimeFee() * overTimeRate(record.time)

◯distanceFee
if distanceMeter.distance < 1000
	return 400
else if distanceMeter.distance < 10000
	if distanceMeter.distance / 400 > before
		return 40
else if distanceMeter.distance / 350 > before
	return 40

return 0

◯lowSpeedTimeFee()
if lowSpeedTimeMeter.time / 45 > before
	return 45
return 0

◯overTimeRate(time)
if time === midnight
	return 1.5
else if time === peek
	return 1.3

return 1